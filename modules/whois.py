import urllib.request, json

import modules.flags.flags

def get_ip(arguments, message):

    chat_id = message['chat']['id']
    response = {'chat_id': message['chat']['id']}

    try:

        try:
            ip = arguments[0]
            print(ip)

        except IndexError:
            response['text'] = ('–ù—É–∂–µ–Ω ip-–∞–¥—Ä–µ—Å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞')
            return response

        url = 'http://ip-api.com/json/%s' % (ip)

        # –ü–∞—Ä—Å–∏–º json
        request = urllib.request.urlopen(url)
        content = request.read().decode('utf8')
        data = json.loads(content)
        print(data)

        if data['status'] == 'fail':
            if data['message'] == 'invalid query':
                print(data['message'])
                response['text'] = '–ó–∞–ø—Ä–æ—Å –Ω–µ–≤–µ—Ä–Ω—ã–π! –≠—Ç–æ –ø–æ-—Ç–≤–æ–µ–º—É ip?!'

            elif data['message'] == 'reserved range':
                response['text'] = '–ó–∞–ø—Ä–æ—Å –Ω–µ–≤–µ—Ä–Ω—ã–π! –≠—Ç–æ—Ç –∞–¥—Ä–µ—Å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö ip!'

            elif data['message'] == 'private range':
                response['text'] = '–ó–∞–ø—Ä–æ—Å –Ω–µ–≤–µ—Ä–Ω—ã–π! –≠—Ç–æ—Ç –∞–¥—Ä–µ—Å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ —á–∞—Å—Ç—ã—Ö ip!'

        elif data['status'] == 'success':
            result = ['–ó–Ω–∞—á–∏—Ç —Ç–∞–∫, —è –ø–æ–∏—Å–∫–∞–ª –∏ —É–∑–Ω–∞–ª, —á—Ç–æ —ç—Ç–æ:']
            flag = (modules.flags.flags.get_flag(data['countryCode']))
            result.append(flag + data['country'] + ' (' + data['countryCode'] + '), ' + data['regionName'])
            result.append('üè®' + '–ì–æ—Ä–æ–¥: ' + data['city'])
            result.append('‚è±' + '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ' + data['timezone'])
            result.append('üì°' + '–ü—Ä–æ–≤–∞–π–¥–µ—Ä: ' + data['isp'] + ' / ' + data['as'])
            response['text'] = "\n\t".join(result)

        else:
            response['text'] = ("–Ø —Ö–∑ —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å...")

    except:
        response['text'] = ("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")

    return response


def grep_ip(ip, message):
    ''' Automatic grep IP from converation'''

    chat_id = message['chat']['id']
    response = {'chat_id': message['chat']['id']}
    response['reply_to_message_id'] = message['message_id']

    try:

        url = 'http://ip-api.com/json/%s' % (ip)

        # –ü–∞—Ä—Å–∏–º json
        request = urllib.request.urlopen(url)
        content = request.read().decode('utf8')
        data = json.loads(content)

        if data['status'] == 'success':
            if data['org'] == 'My Company':
                response['text'] = 'this is my company!'
            else:
                result = ['–ö—Å—Ç–∞—Ç–∏, –µ—Å–ª–∏ —Ä–µ—á—å –∑–∞—à–ª–∞ –æ–± ip %s' % (ip) + ', —Ç–æ —è —Ç—É—Ç –ø–æ–∏—Å–∫–∞–ª –∏ –Ω–∞—à–µ–ª, —á—Ç–æ —ç—Ç–æ:']
                flag = (modules.flags.flags.get_flag(data['countryCode']))
                result.append(flag + data['country'] + ' (' + data['countryCode'] + '), ' + data['regionName'])
                result.append('üè®' + '–ì–æ—Ä–æ–¥: ' + data['city'])
                result.append('‚è±' + '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ' + data['timezone'])
                result.append('üì°' + '–ü—Ä–æ–≤–∞–π–¥–µ—Ä: ' + data['isp'] + ' / ' + data['as'])
                response['text'] = "\n\t".join(result)

        else:
            pass

    except:
        pass    

    return response
